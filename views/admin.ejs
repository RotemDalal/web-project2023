<html>

<head>
    <%- include('./head.ejs') %>
        <link rel="stylesheet" href="/css/profile.css" />
        <link rel="stylesheet" href="/css/admin.css" />
        <script src="/js/admin.js"></script>
        <title>WineNot</title>
        <script src="https://d3js.org/d3.v7.min.js"></script>

</head>

<body>
    <%- include('./header.ejs') %>
        <div class="centered-div">
            <h1>Hello, <%= username %>
            </h1>

            <button type="button" id="openStats" onclick="viewStats()">Statistics</button>
        </div>
        <style>
            #statsContent {
                height: 0px;
                overflow-y: hidden;
                transition: 0.2ms;
            }
        </style>
        <script>
            // Please , do not change this var name because it clashes with the let i in the facebook js
            let var_i = 0;
            function viewStats() {
                const container = document.getElementById("statsContent");
                const pageContainer = document.getElementById("pageContainer");
                if (var_i % 2) {
                    container.style.height = "0px";
                    pageContainer.style.height = "650px";
                    var_i++;
                } else {
                    container.style.height = "1200px";
                    pageContainer.style.height = "1850px";
                    var_i++;
                }
            }
        </script>
        <main id="pageContainer">
            <section data-aos="fade-down" style="padding-top: 20px;">
                <div class="product-actions-div">
                    <div class="add-product-div">
                        <div><img class="icon" src="/img/cocktails/bottle.png" alt="icon"></div>
                        <h2 class="wines_type">Add Product</h2>
                        <form>
                            <input type="text" id="id" placeholder="Product Id(number)" required>
                            <input type="text" id="name" placeholder="Product Name(char)" required>
                            <input type="text" id="description" placeholder="Product Description(char)" required>
                            <input type="text" id="price" placeholder="Product Price(number)" required>
                            <input type="text" id="image" placeholder="Product Image(link)" required>
                            <input type="text" id="kosher" placeholder="Kosher(false/true)" required>
                            <input type="text" id="alcoholPercentage" placeholder="Alcohol Percentage(number)" required>
                            <input type="text" id="volume" placeholder="volume(number)" required>
                            <input type="text" id="type" placeholder="type(name)" required>
                            <input type="text" id="drySweet" placeholder="Dry Sweet(char)" required>
                            <input type="text" id="grapeVarieties" placeholder="Grape Varieties(char)" required>
                            <button type="button" id="add-product-btn">Add Product</button>
                        </form>
                    </div>
                    <div class="remove-product-div">
                        <div><img class="garbae-icon" src="/img/shop/remove-icon.png" alt="icon"></div>
                        <h2 class="wines_type">Remove Product</h2>
                        <form>
                            <input type="text" id="remove-product-name" placeholder="Product Name to Remove" required>
                            <button type="button" id="remove-product-btn">Remove Product</button>
                        </form>
                    </div>
                    <div class="fb-post-div">
                        <div><img class="icon" src="/img/fb.png" alt="icon"></div>
                        <h2 class="wines_type">Manage Facebook Page</h2>
                        <p id="facebook-page-data">Loading Page Data...</p>
                        <form>
                            <input type="text" id="post-message" placeholder="Post Message" required>
                            <button type="button" id="post-btn">Post</button>
                        </form>
                    </div>

                </div>
                <div id="error"></div>
            </section>

            <div id="statsContent" class="container">
                <h1>Statistics</h1>

                <div id="chart" style="display: block;"> <!-- Changed to block to display it -->
                    <h2>ðŸ“ˆ The highest price charts</h2>
                    <svg id="barGraph"></svg>
                </div>

                <div id="pieChart">
                    <h2>ðŸ¥§ Kosher Distribution</h2>
                    <svg id="kosherPieChart"></svg>
                </div>

                <script>
                    function renderPieChart(data) {
                        const width = 500;
                        const height = 500;
                        const radius = Math.min(width, height) / 2;

                        // Calculate the total count of all segments
                        const total = data.reduce((sum, d) => sum + d.count, 0);

                        const svg = d3.select("#kosherPieChart")
                            .attr("width", width)
                            .attr("height", height)
                            .append("g")
                            .attr("transform", `translate(${width / 2}, ${height / 2})`);

                        const color = d3.scaleOrdinal(["#4daf4a", "#377eb8", "#ff7f00", "#984ea3", "#e41a1c"]);

                        const pie = d3.pie().value(d => d.count);

                        const path = d3.arc()
                            .outerRadius(radius - 10)
                            .innerRadius(0);

                        const label = d3.arc()
                            .outerRadius(radius)
                            .innerRadius(radius - 80);

                        const arc = svg.selectAll(".arc")
                            .data(pie(data))
                            .enter().append("g")
                            .attr("class", "arc");

                        arc.append("path")
                            .attr("d", path)
                            .attr("fill", d => color(d.data._id));

                        arc.append("text")
                            .attr("transform", d => `translate(${label.centroid(d)})`)
                            .attr("dy", "0.35em")
                            .text(d => {
                                // Calculate the percentage for this slice
                                const percent = (d.data.count / total * 100).toFixed(2) + "%";
                                return d.data._id ? `Yes: ${percent}` : `No: ${percent}`;
                            });
                    }
                    const margin = { top: 20, right: 20, bottom: 200, left: 40 },
                        width = 960 - margin.left - margin.right,
                        height = 500 - margin.top - margin.bottom;

                    const svg = d3.select("#barGraph")
                        .attr("width", width + margin.left + margin.right)
                        .attr("height", height + margin.top + margin.bottom)
                        .append("g")
                        .attr("transform", `translate(${margin.left}, ${margin.top})`);

                    const x = d3.scaleBand().range([0, width]).padding(0.1),
                        y = d3.scaleLinear().range([height, 0]);

                    // Function to show tab
                    function showTab(tabName) {
                        const tabs = ['chart', 'data', 'products'];  // All tab ids
                        tabs.forEach(tab => document.getElementById(tab).style.display = 'none');
                        document.getElementById(tabName).style.display = 'block';
                    }

                    // Function to fetch and render stats
                    async function fetchStats() {
                        try {
                            const response = await fetch('/Statistics');
                            const data = await response.json();
                            console.log('Fetched Data:', data);

                            // Sort the typeStats by count in descending order
                            const typeStats = data.typeStats
                                .map(d => ({ type: d._id, count: d.count }))
                                .sort((a, b) => b.count - a.count);

                            // Sort products by price in descending order
                            const sortedProducts = data.products.sort((a, b) => b.price - a.price);

                            console.log('Transformed Type Stats:', typeStats);
                            console.log('Sorted Products:', sortedProducts);

                            updateChart(sortedProducts.map(product => ({ type: product.name, count: product.price })), 'Product Prices');

                            const kosherStats = data.kosherStats;
                            renderPieChart(kosherStats);
                        } catch (error) {
                            console.error('Error fetching or parsing data:', error);
                        }
                    }
                    // Function to update the chart
                    function updateChart(stats, title) {
                        x.domain(stats.map(d => d.type));
                        y.domain([0, d3.max(stats, d => d.count)]);
                        // Remove any previous bars and axes
                        svg.selectAll(".bar").remove();
                        svg.selectAll(".axis").remove();

                        // Draw new bars
                        svg.selectAll(".bar")
                            .data(stats)
                            .enter().append("rect")
                            .attr("class", "bar")
                            .attr("x", d => x(d.type))
                            .attr("width", x.bandwidth())
                            .attr("y", d => y(d.count))
                            .attr("height", d => height - y(d.count))
                            .attr("fill", "steelblue");  // Added color

                        // Add x-axis
                        svg.append("g")
                            .attr("class", "axis")
                            .attr("transform", "translate(0," + height + ")")
                            .call(d3.axisBottom(x))
                            .selectAll("text")
                            .style("text-anchor", "end")
                            .attr("dx", "-.8em")
                            .attr("dy", ".15em")
                            .attr("transform", "rotate(-65)");

                        // Add y-axis
                        svg.append("g")
                            .attr("class", "axis")
                            .call(d3.axisLeft(y));

                        console.log(title, stats);
                    }
                    // Fetch and render stats when the page loads
                    document.addEventListener("DOMContentLoaded", fetchStats);
                </script>
            </div>


        </main>

        <%- include('./footer.ejs') %>
</body>

</html>